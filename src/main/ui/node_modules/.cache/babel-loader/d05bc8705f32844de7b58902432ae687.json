{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\StocksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Flex, Heading, useColorMode, useColorModeValue, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { DarkMode } from './DarkMode';\nimport tokenProvider from './TokenProvider';\nimport Sidebar from './Sidebar';\nimport axios from 'axios'; // API \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StocksPage() {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  /** Changes ColorMode */\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const [modeName, setModeName] = useState('Dark Mode');\n  /** Determines Light or Dark Mode Name */\n\n  const [GME_PRICE, set_GME_PRICE] = useState('');\n  const [GME_PERCENT, set_GME_PERCENT] = useState('');\n\n  function get_GME_PRICE() {\n    try {\n      console.log(\"GET\");\n      axios.get('http://localhost:8080/api/v1/stocks').then(res => {\n        set_GME_PRICE(res.data.price);\n        set_GME_PERCENT(res.data.changeInPercent);\n      });\n      setInterval(async () => {\n        console.log(\"GET - 5MIN\");\n        await axios.get('http://localhost:8080/api/v1/stocks').then(res => set_GME_PRICE(res.data.price));\n        console.log(\"COMPLETE\");\n      }, 1 * 60 * 5000);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  get_GME_PRICE();\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        h: \"400px\",\n        templateColumns: \"repeat(5, 1lfr)\",\n        gap: 4,\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          rowSpan: 2,\n          colSpan: 1,\n          bg: \"tomato\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"GME PRICE = \", GME_PRICE, \" GME PERCENT = \", GME_PERCENT]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 3,\n          bg: \"tomato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StocksPage, \"YNVUSj6Ppf4MR4FjRRvA2KdX9mQ=\", false, function () {\n  return [useColorMode, useColorModeValue];\n});\n\n_c = StocksPage;\nexport default StocksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/StocksPage.js"],"names":["React","useState","Flex","Heading","useColorMode","useColorModeValue","Text","Container","Grid","GridItem","extendTheme","withDefaultColorScheme","useHistory","DarkMode","tokenProvider","Sidebar","axios","StocksPage","toggleColorMode","formBackground","modeName","setModeName","GME_PRICE","set_GME_PRICE","GME_PERCENT","set_GME_PERCENT","get_GME_PRICE","console","log","get","then","res","data","price","changeInPercent","setInterval","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Flex, Heading, useColorMode, useColorModeValue, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme} from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DarkMode } from './DarkMode';\r\nimport tokenProvider from './TokenProvider';\r\nimport Sidebar from './Sidebar';\r\nimport axios from 'axios'; // API \r\n\r\nfunction StocksPage() {\r\n    const { toggleColorMode } = useColorMode(); /** Changes ColorMode */\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */\r\n    const [modeName, setModeName] = useState('Dark Mode'); /** Determines Light or Dark Mode Name */\r\n    const [GME_PRICE, set_GME_PRICE] = useState('');\r\n    const [GME_PERCENT, set_GME_PERCENT] = useState('');\r\n\r\n    function get_GME_PRICE() {\r\n        try {\r\n            console.log(\"GET\")\r\n            axios.get('http://localhost:8080/api/v1/stocks').then(res => {\r\n                set_GME_PRICE(res.data.price)\r\n                set_GME_PERCENT(res.data.changeInPercent)\r\n            });\r\n\r\n            setInterval(async () => {\r\n                console.log(\"GET - 5MIN\")\r\n                await axios.get('http://localhost:8080/api/v1/stocks').then(res => set_GME_PRICE(res.data.price))\r\n                console.log(\"COMPLETE\")\r\n            }, 1 * 60 * 5000)\r\n        }        \r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    get_GME_PRICE();\r\n\r\n    return (\r\n        <Flex w=\"100%\">\r\n            <Sidebar />\r\n            <Container maxW=\"container.xl\">\r\n                <Grid \r\n                h=\"400px\"\r\n                templateColumns=\"repeat(5, 1lfr)\"\r\n                gap={4}\r\n                >\r\n                    <GridItem rowSpan={2} colSpan={1} bg=\"tomato\">\r\n                        <Text>GME PRICE = {GME_PRICE} GME PERCENT = {GME_PERCENT}</Text></GridItem>\r\n                    <GridItem colSpan={2} bg=\"papayawhip\"/>\r\n                    <GridItem colSpan={2} bg=\"papayawhip\"/>\r\n                    <GridItem colSpan={3} bg=\"tomato\" />\r\n                </Grid>\r\n            </Container>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default StocksPage"]},"metadata":{},"sourceType":"module"}