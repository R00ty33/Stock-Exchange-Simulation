{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\StocksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Flex, Button, Heading, useColorMode, useColorModeValue, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { DarkMode } from './DarkMode';\nimport tokenProvider from './TokenProvider';\nimport Sidebar from './Sidebar';\nimport axios from 'axios'; // API \n\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nfunction StocksPage() {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  /** Changes ColorMode */\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const [modeName, setModeName] = useState('Dark Mode');\n  /** Determines Light or Dark Mode Name */\n\n  const [GME_PRICE, set_GME_PRICE] = useState('');\n  const [GME_PERCENT, set_GME_PERCENT] = useState('');\n\n  const LineChart = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 200,\n        width: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  };\n\n  async function get_GME_PRICE() {\n    try {\n      let [data] = await Promise.all([axios.get('http://localhost:8080/api/v1/stocks/GME/Price')]);\n      set_GME_PRICE(data.data.price);\n      set_GME_PERCENT(data.data.changeInPercent);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function get_GME_PRICE() {\n    try {\n      let [data] = await Promise.all([axios.get('http://localhost:8080/api/v1/stocks/GME/History')]);\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  /*\r\n  async function test() {\r\n      var options = {\r\n          method: 'GET',\r\n          url: 'https://alpha-vantage.p.rapidapi.com/query',\r\n          params: {\r\n            symbol: 'GME',\r\n            function: 'TIME_SERIES_INTRADAY',\r\n            interval: '25hr',\r\n            output_size: 'compact',\r\n            datatype: 'json'\r\n          },\r\n          headers: {\r\n            'x-rapidapi-host': 'alpha-vantage.p.rapidapi.com',\r\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n          }\r\n        };\r\n        \r\n        await axios.request(options).then(function (response) {\r\n              console.log(response.data['Meta Data']['2. Symbol']);\r\n            console.log(response.data);\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n  }\r\n  */\n\n\n  get_GME_PRICE();\n\n  function buy(symbol, price) {\n    const params = new URLSearchParams();\n    params.append('symbol', symbol);\n    params.append('price', price);\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    };\n    axios.post('http://localhost:8080/api/login', params, config).then(response => {\n      console.log(response.status, response, response.data);\n    }).catch(err => {\n      console.log(\"Promise Rejected\", err.message, err.response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        h: \"400px\",\n        templateColumns: \"repeat(5, 1lfr)\",\n        gap: 4,\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          rowSpan: 2,\n          colSpan: 1,\n          bg: \"papayawhip\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"tomato\",\n            children: [\"GME PRICE = \", GME_PRICE, \" GME PERCENT = \", GME_PERCENT]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => buy('GME', GME_PRICE),\n            color: \"tomato\",\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 3,\n          bg: \"papayawhip\",\n          children: /*#__PURE__*/_jsxDEV(LineChart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StocksPage, \"YNVUSj6Ppf4MR4FjRRvA2KdX9mQ=\", false, function () {\n  return [useColorMode, useColorModeValue];\n});\n\n_c = StocksPage;\nexport default StocksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/StocksPage.js"],"names":["React","useState","Flex","Button","Heading","useColorMode","useColorModeValue","Text","Container","Grid","GridItem","extendTheme","withDefaultColorScheme","useHistory","DarkMode","tokenProvider","Sidebar","axios","Line","require","config","StocksPage","toggleColorMode","formBackground","modeName","setModeName","GME_PRICE","set_GME_PRICE","GME_PERCENT","set_GME_PERCENT","LineChart","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","get_GME_PRICE","Promise","all","get","price","changeInPercent","err","console","log","buy","symbol","params","URLSearchParams","append","headers","post","then","response","status","catch","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Flex, Button, Heading, useColorMode, useColorModeValue, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme} from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DarkMode } from './DarkMode';\r\nimport tokenProvider from './TokenProvider';\r\nimport Sidebar from './Sidebar';\r\nimport axios from 'axios'; // API \r\nimport { Line } from 'react-chartjs-2';\r\nrequire('dotenv').config()\r\n\r\n\r\nfunction StocksPage() {\r\n    const { toggleColorMode } = useColorMode(); /** Changes ColorMode */\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */\r\n    const [modeName, setModeName] = useState('Dark Mode'); /** Determines Light or Dark Mode Name */\r\n    const [GME_PRICE, set_GME_PRICE] = useState('');\r\n    const [GME_PERCENT, set_GME_PERCENT] = useState('');\r\n    const LineChart = () => {\r\n        return <div>\r\n            <Line \r\n                data={{\r\n                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                    datasets: [{\r\n                        label: '# of Votes',\r\n                        data: [12, 19, 3, 5, 2, 3],\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height={200}\r\n                width={400}\r\n            />\r\n            \r\n        </div>\r\n    }\r\n\r\n    async function get_GME_PRICE() {\r\n        try {\r\n            let [data] = await Promise.all([\r\n                axios.get('http://localhost:8080/api/v1/stocks/GME/Price')\r\n            ])\r\n            set_GME_PRICE(data.data.price);\r\n            set_GME_PERCENT(data.data.changeInPercent)\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async function get_GME_PRICE() {\r\n        try {\r\n            let [data] = await Promise.all([\r\n                axios.get('http://localhost:8080/api/v1/stocks/GME/History')\r\n            ])\r\n            console.log(data);\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    /*\r\n    async function test() {\r\n        var options = {\r\n            method: 'GET',\r\n            url: 'https://alpha-vantage.p.rapidapi.com/query',\r\n            params: {\r\n              symbol: 'GME',\r\n              function: 'TIME_SERIES_INTRADAY',\r\n              interval: '25hr',\r\n              output_size: 'compact',\r\n              datatype: 'json'\r\n            },\r\n            headers: {\r\n              'x-rapidapi-host': 'alpha-vantage.p.rapidapi.com',\r\n              'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n            }\r\n          };\r\n          \r\n          await axios.request(options).then(function (response) {\r\n\r\n              console.log(response.data['Meta Data']['2. Symbol']);\r\n              console.log(response.data);\r\n          }).catch(function (error) {\r\n              console.error(error);\r\n          });\r\n    }\r\n    */\r\n    get_GME_PRICE();\r\n\r\n\r\n\r\n    function buy(symbol, price) {\r\n        const params = new URLSearchParams();\r\n        params.append('symbol', symbol);\r\n        params.append('price', price);\r\n\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n        axios.post('http://localhost:8080/api/login', params, config).then((response) => {\r\n            console.log(response.status, response, response.data);\r\n        }).catch((err) => {\r\n            console.log(\"Promise Rejected\", err.message, err.response.data);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Flex height=\"100vh\">\r\n            <Sidebar />\r\n            <Container maxW=\"container.xl\">\r\n                <Grid \r\n                h=\"400px\"\r\n                templateColumns=\"repeat(5, 1lfr)\"\r\n                gap={4}\r\n                >\r\n                    <GridItem rowSpan={2} colSpan={1} bg=\"papayawhip\">\r\n                        <Text color=\"tomato\">GME PRICE = {GME_PRICE} GME PERCENT = {GME_PERCENT}</Text>\r\n                        <Button onClick={() => buy('GME', GME_PRICE)} color=\"tomato\">Buy</Button>\r\n                    </GridItem>\r\n                    <GridItem colSpan={3} bg=\"papayawhip\">\r\n                        <LineChart />\r\n                    </GridItem>\r\n                </Grid>\r\n            </Container>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default StocksPage"]},"metadata":{},"sourceType":"module"}