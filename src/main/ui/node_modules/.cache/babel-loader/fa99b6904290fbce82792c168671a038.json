{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport tokenProvider from './TokenProvider';\n\nconst AuthProvider = () => {\n  var _s = $RefreshSig$();\n\n  const login = newTokens => {\n    tokenProvider.setTokens(newTokens);\n  };\n\n  const logout = () => {\n    tokenProvider.setTokens(null);\n  };\n\n  const useAuth = () => {\n    _s();\n\n    const [isLogged, setIsLogged] = useState(tokenProvider.isLogged());\n    useEffect(() => {\n      const listener = newIsLogged => {\n        setIsLogged(newIsLogged);\n      };\n\n      tokenProvider.subscribe(listener);\n      return () => {\n        tokenProvider.unsubscribe(listener);\n      };\n    }, []);\n    return [isLogged];\n  };\n\n  _s(useAuth, \"kE0xl300w+Xzr0Pn2h4vMj6X0bI=\");\n};\n\n_c = AuthProvider;\nexport const [login, logout, useAuth] = AuthProvider();\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/AuthProvider.js"],"names":["React","useState","useEffect","tokenProvider","AuthProvider","login","newTokens","setTokens","logout","useAuth","isLogged","setIsLogged","listener","newIsLogged","subscribe","unsubscribe"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,KAAK,GAAIC,SAAD,IAAe;AACzBH,IAAAA,aAAa,CAACI,SAAd,CAAwBD,SAAxB;AACH,GAFD;;AAIA,QAAME,MAAM,GAAG,MAAM;AACjBL,IAAAA,aAAa,CAACI,SAAd,CAAwB,IAAxB;AACH,GAFD;;AAIA,QAAME,OAAO,GAAG,MAAM;AAAA;;AAClB,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACE,aAAa,CAACO,QAAd,EAAD,CAAxC;AAEAR,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAMU,QAAQ,GAAIC,WAAD,IAAiB;AAC9BF,QAAAA,WAAW,CAACE,WAAD,CAAX;AACH,OAFD;;AAIAV,MAAAA,aAAa,CAACW,SAAd,CAAwBF,QAAxB;AACA,aAAO,MAAM;AACTT,QAAAA,aAAa,CAACY,WAAd,CAA0BH,QAA1B;AACH,OAFD;AAGH,KATQ,EASN,EATM,CAAT;AAWA,WAAO,CAACF,QAAD,CAAP;AACH,GAfD;;AATuB,KASjBD,OATiB;AAyB1B,CAzBD;;KAAML,Y;AA2BN,OAAO,MAAM,CAACC,KAAD,EAAQG,MAAR,EAAgBC,OAAhB,IAA2BL,YAAY,EAA7C","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport tokenProvider from './TokenProvider';\r\n\r\nconst AuthProvider = () => {\r\n    const login = (newTokens) => {\r\n        tokenProvider.setTokens(newTokens);\r\n    };\r\n\r\n    const logout = () => {\r\n        tokenProvider.setTokens(null);\r\n    };\r\n\r\n    const useAuth = () => {\r\n        const [isLogged, setIsLogged] = useState(tokenProvider.isLogged());\r\n\r\n        useEffect(() => {\r\n            const listener = (newIsLogged) => {\r\n                setIsLogged(newIsLogged);\r\n            };\r\n\r\n            tokenProvider.subscribe(listener);\r\n            return () => {\r\n                tokenProvider.unsubscribe(listener);\r\n            };\r\n        }, []);\r\n\r\n        return [isLogged];\r\n    }\r\n}\r\n\r\nexport const [login, logout, useAuth] = AuthProvider();"]},"metadata":{},"sourceType":"module"}