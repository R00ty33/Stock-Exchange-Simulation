{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Heading, useColorMode, useColorModeValue, Button, Box, Container, Grid, GridItem, extendTheme, withDefaultColorScheme } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { DarkMode } from './DarkMode';\nimport tokenProvider from './TokenProvider';\nimport Sidebar from './Sidebar';\nimport authProvider from './AuthProvider';\nimport axios from 'axios'; // API \n\nimport { Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  /** Changes ColorMode */\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const [modeName, setModeName] = useState('Dark Mode');\n  /** Determines Light or Dark Mode Name */\n\n  const [data, setData] = useState('');\n  const history = useHistory();\n  let email = 't';\n  let firstName = '';\n  let lastName = '';\n  let balance = '5000';\n  let portfolioBalance = '5000';\n  let positionData = '';\n  useEffect(() => {\n    let accessToken = tokenProvider.getAccessToken();\n    axios.post('http://localhost:8080/api/v1/user/UserDetails?accessToken=' + accessToken, {\n      accessToken: accessToken\n    }).then(response => {\n      console.log(response.data);\n      email = response.data.email;\n      firstName = response.data.firstName;\n      lastName = response.data.lastName;\n    }).then(() => {\n      axios.post('http://localhost:8080/api/v1/user/PositionDetails?accessToken=' + accessToken, {\n        accessToken: accessToken\n      }).then(response => {\n        console.log(response.data);\n\n        if (response.data.balance != null || response.data.balance != undefined) {\n          balance = response.data.balance;\n        }\n\n        if (response.data.portfolioBalance != null || response.data.portfolioBalance != undefined) {\n          portfolioBalance = response.data.portfolioBalance;\n        }\n\n        positionData = response.data.positions;\n      }).then(() => {\n        setData(getData(email, firstName, lastName, balance, positionData)); //JSON.stringify(positions)\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function getData(email, firstName, lastName, balance, positionData) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      ml: 5,\n      mt: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", firstName, \" \", lastName, \",\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Email: \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Balance: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Portfolio Balance: \", portfolioBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Positions: \", getTable(positionData)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getTable(data) {\n    if (data == null || data == \"\") {\n      return /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n          children: \"Your Positions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Thead, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Shares\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    }\n\n    let formattedData = [];\n\n    for (let i = 0; i < data.length; i++) {\n      let tempSymbol = data[i].symbol;\n      let tempShares = data[i].shares;\n      let tempPrice = data[i].price_per_share;\n      formattedData.push( /*#__PURE__*/_jsxDEV(Tbody, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Td, {\n            children: tempSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: tempShares\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: tempPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 85\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 32\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n        children: \"Your Positions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Shares\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), formattedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      height: \"100vh\",\n      mt: 6,\n      display: \"block\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        ml: 8,\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"k3/fLJ2gs7GnrcOxnJoVFc2aEk4=\", false, function () {\n  return [useColorMode, useColorModeValue, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/gitHub_projects/Stock/src/main/ui/src/components/HomePage.js"],"names":["React","useState","useEffect","Flex","Heading","useColorMode","useColorModeValue","Button","Box","Container","Grid","GridItem","extendTheme","withDefaultColorScheme","useHistory","DarkMode","tokenProvider","Sidebar","authProvider","axios","Table","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","Home","toggleColorMode","formBackground","modeName","setModeName","data","setData","history","email","firstName","lastName","balance","portfolioBalance","positionData","accessToken","getAccessToken","post","then","response","console","log","undefined","positions","getData","catch","err","getTable","formattedData","i","length","tempSymbol","symbol","tempShares","shares","tempPrice","price_per_share","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Flex, Heading, useColorMode, useColorModeValue, Button, Box, Container, Grid, GridItem, extendTheme, withDefaultColorScheme} from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DarkMode } from './DarkMode';\r\nimport tokenProvider from './TokenProvider';\r\nimport Sidebar from './Sidebar';\r\nimport authProvider from './AuthProvider';\r\nimport axios from 'axios'; // API \r\nimport {\r\n    Table,\r\n    Thead,\r\n    Tbody,\r\n    Tfoot,\r\n    Tr,\r\n    Th,\r\n    Td,\r\n    TableCaption,\r\n  } from \"@chakra-ui/react\"\r\n\r\nfunction Home() {\r\n    const { toggleColorMode } = useColorMode(); /** Changes ColorMode */\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */\r\n    const [modeName, setModeName] = useState('Dark Mode'); /** Determines Light or Dark Mode Name */\r\n    const [data, setData] = useState('');\r\n    const history = useHistory();  \r\n    let email = 't';\r\n    let firstName = '';\r\n    let lastName = ''; \r\n    let balance = '5000';\r\n    let portfolioBalance = '5000';\r\n    let positionData = '';\r\n\r\n    useEffect(() => {\r\n        let accessToken = tokenProvider.getAccessToken();\r\n        axios.post('http://localhost:8080/api/v1/user/UserDetails?accessToken=' + accessToken, {\r\n            accessToken: accessToken,\r\n        }).then((response) => {  \r\n            console.log(response.data);\r\n            email = response.data.email;\r\n            firstName = response.data.firstName;\r\n            lastName = response.data.lastName;\r\n        }).then(() => {\r\n            axios.post('http://localhost:8080/api/v1/user/PositionDetails?accessToken=' + accessToken, {\r\n                accessToken: accessToken,\r\n            }).then((response) => {  \r\n                console.log(response.data);\r\n                if (response.data.balance != null || response.data.balance != undefined) {\r\n                    balance = response.data.balance;    \r\n                }\r\n                if (response.data.portfolioBalance != null || response.data.portfolioBalance != undefined) {\r\n                    portfolioBalance = response.data.portfolioBalance;\r\n                }\r\n                positionData = response.data.positions;\r\n            }).then(() => {\r\n                setData(getData(email, firstName, lastName, balance, positionData)); //JSON.stringify(positions)\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }, []);\r\n\r\n    function getData(email, firstName, lastName, balance, positionData) {\r\n        return (\r\n            <Container ml={5} mt={6}>\r\n                <h1>Hello {firstName} {lastName},</h1>\r\n                <h1>Email: {email}</h1>\r\n                <h1>Balance: {balance}</h1>\r\n                <h1>Portfolio Balance: {portfolioBalance}</h1>\r\n                <h1>Positions: {getTable(positionData)}</h1>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    function getTable(data) {\r\n        if (data == null || data == \"\") {\r\n            return (\r\n                <Table>\r\n                <TableCaption>Your Positions</TableCaption>\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th>Symbol</Th>\r\n                        <Th>Shares</Th>\r\n                        <Th>Price</Th>\r\n                    </Tr>\r\n                </Thead>\r\n            </Table>\r\n            )\r\n        }\r\n        let formattedData = [];\r\n        for (let i=0; i<data.length; i++) {\r\n            let tempSymbol = data[i].symbol;\r\n            let tempShares = data[i].shares;\r\n            let tempPrice = data[i].price_per_share;\r\n            formattedData.push(<Tbody><Tr><Td>{tempSymbol}</Td><Td>{tempShares}</Td><Td>{tempPrice}</Td></Tr></Tbody>)\r\n        }\r\n        return (\r\n            <Table>\r\n                <TableCaption>Your Positions</TableCaption>\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th>Symbol</Th>\r\n                        <Th>Shares</Th>\r\n                        <Th>Price</Th>\r\n                    </Tr>\r\n                </Thead>\r\n                {formattedData}\r\n            </Table>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Flex width=\"100%\">\r\n            <Sidebar />\r\n            <Flex height=\"100vh\" mt={6} display=\"block\">\r\n                <Heading ml={8}>Dashboard</Heading>\r\n                {data}\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}