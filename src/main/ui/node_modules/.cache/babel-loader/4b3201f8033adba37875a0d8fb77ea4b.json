{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\UserRegistration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios'; // API \n\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { Button, Flex, Heading, Input, useColorMode } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserRegistration() {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [DOB, setDOB] = useState('');\n\n  const register = () => {\n    Axios.post('http://localhost:8080/api/v1/users', {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      DOB: DOB\n    }).then(response => {\n      console.log(response.data);\n    }).catch(err => {\n      console.log(\"Promise Rejected\", err.response.data);\n    });\n  };\n\n  const handleFirstNameChange = e => {\n    setFirstName(e.target.value);\n  };\n\n  const handleLastNameChange = e => {\n    setLastName(e.target.value);\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleDOBChange = e => {\n    setDOB(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      background: \"gray.100\",\n      p: 12,\n      rounded: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 6,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        variant: \"filled\",\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"*********\",\n        value: email,\n        onChange: handleEmailChange,\n        variant: \"filled\",\n        mb: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n}\n\n_s(UserRegistration, \"knRQEK8rBPY8GgdAZN6RB4Rd42k=\");\n\n_c = UserRegistration;\nexport default UserRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRegistration\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/UserRegistration.js"],"names":["React","useState","Axios","ChakraProvider","Button","Flex","Heading","Input","useColorMode","UserRegistration","firstName","setFirstName","lastName","setLastName","email","setEmail","DOB","setDOB","register","post","then","response","console","log","data","catch","err","handleFirstNameChange","e","target","value","handleLastNameChange","handleEmailChange","handleDOBChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Axios from 'axios'; // API \r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { Button, Flex, Heading, Input, useColorMode } from '@chakra-ui/react';\r\n\r\n\r\nfunction UserRegistration() {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [DOB, setDOB] = useState('');\r\n\r\n    const register = () => {\r\n        Axios.post('http://localhost:8080/api/v1/users', {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            DOB: DOB\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n        }).catch((err) => {\r\n            console.log(\"Promise Rejected\", err.response.data);\r\n        })\r\n    }\r\n\r\n    const handleFirstNameChange = e => { \r\n        setFirstName(e.target.value)\r\n    }\r\n\r\n    const handleLastNameChange = e => {\r\n        setLastName(e.target.value)\r\n    }\r\n\r\n    const handleEmailChange = e => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleDOBChange = e => {\r\n        setDOB(e.target.value);\r\n    }\r\n\r\n    return (\r\n            <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Flex direction=\"column\" background=\"gray.100\" p={12} rounded={6}>\r\n                    <Heading mb={6}>Log in</Heading>\r\n                    <Input type=\"text\" placeholder=\"email\" value={email} onChange={handleEmailChange} variant=\"filled\" mb={3}></Input>\r\n                    <Input type=\"password\" placeholder=\"*********\" value={email} onChange={handleEmailChange} variant=\"filled\" mb={6}></Input>\r\n                    <Button colorScheme=\"teal\">Log in</Button>\r\n                </Flex>\r\n            </Flex>\r\n    )\r\n}\r\n\r\nexport default UserRegistration;"]},"metadata":{},"sourceType":"module"}