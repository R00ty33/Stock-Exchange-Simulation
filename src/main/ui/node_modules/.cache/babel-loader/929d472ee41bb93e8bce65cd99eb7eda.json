{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios'; // API \n\nimport { Button, Flex, Heading, Input, useColorModeValue, Text, Alert, AlertIcon, AlertTitle, AlertDescription, CloseButton } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { DarkMode } from './DarkMode';\nimport './TokenProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [incorrectPasswordAlert, setIncorrectPasswordAlert] = useState(false);\n  let token = null;\n  let refreshToken = null;\n\n  function LoginAuthentication() {\n    const params = new URLSearchParams();\n    params.append('email', email);\n    params.append('password', password);\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    };\n    Axios.post('http://localhost:8080/api/login', params, config).then(response => {\n      console.log(response.status, response, response.data);\n\n      if (response.data.message === 'Unauthorized') {\n        setIncorrectPasswordAlert(true);\n      } else {\n        token = response.data.access_token;\n        refreshToken = response.data.refresh_token;\n        console.log(TokenProvider.getExpirationDate(token));\n        history.push(`/Home`);\n      }\n    }).catch(err => {\n      console.log(\"Promise Rejected\", err.message, err.response.data);\n\n      if (err.response.data.message === 'Unauthorized') {\n        setIncorrectPasswordAlert(true);\n      }\n    });\n  }\n\n  const HandleIncorrectPasswordAlert = () => {\n    if (incorrectPasswordAlert) {\n      return /*#__PURE__*/_jsxDEV(IncorrectPasswordAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const IncorrectPasswordAlert = () => {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"error\",\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n        mr: -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n        maxWidth: \"sm\",\n        children: \"Wrong Email/Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n        position: \"absolute\",\n        onClick: () => setIncorrectPasswordAlert(false),\n        right: \"-2px\",\n        top: \"8px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      background: formBackground,\n      p: 12,\n      rounded: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 6,\n        children: [\"Log in\", /*#__PURE__*/_jsxDEV(DarkMode, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: handleEmail,\n        placeholder: \"email\",\n        variant: \"filled\",\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        onChange: handlePassword,\n        placeholder: \"*********\",\n        variant: \"filled\",\n        mb: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HandleIncorrectPasswordAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: LoginAuthentication,\n        mb: 3,\n        colorScheme: \"teal\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Dont have an account? Sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(`/Register`),\n        mb: 6,\n        colorScheme: \"red\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"p7ZvxtXnrDfbClnvQHYCIGw85Kc=\", false, function () {\n  return [useColorModeValue, useHistory];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/LoginPage.js"],"names":["React","useState","Axios","Button","Flex","Heading","Input","useColorModeValue","Text","Alert","AlertIcon","AlertTitle","AlertDescription","CloseButton","useHistory","DarkMode","LoginPage","formBackground","history","email","setEmail","password","setPassword","incorrectPasswordAlert","setIncorrectPasswordAlert","token","refreshToken","LoginAuthentication","params","URLSearchParams","append","config","headers","post","then","response","console","log","status","data","message","access_token","refresh_token","TokenProvider","getExpirationDate","push","catch","err","HandleIncorrectPasswordAlert","IncorrectPasswordAlert","handleEmail","e","target","value","handlePassword"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Axios from 'axios'; // API \r\nimport { Button, Flex, Heading, Input, useColorModeValue, Text, Alert, AlertIcon, AlertTitle, AlertDescription, CloseButton } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DarkMode } from './DarkMode';\r\nimport './TokenProvider';\r\n\r\nfunction LoginPage() {\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */  \r\n    const history = useHistory();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [incorrectPasswordAlert, setIncorrectPasswordAlert] = useState(false);\r\n\r\n    let token = null;\r\n    let refreshToken = null;\r\n\r\n    function LoginAuthentication() {\r\n        const params = new URLSearchParams();\r\n        params.append('email', email);\r\n        params.append('password', password);\r\n\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n          }\r\n        Axios.post('http://localhost:8080/api/login', params, config).then((response) => {\r\n            console.log(response.status, response, response.data);\r\n            if (response.data.message === 'Unauthorized') {\r\n                setIncorrectPasswordAlert(true);\r\n            }\r\n            else {\r\n                token = response.data.access_token;\r\n                refreshToken = response.data.refresh_token\r\n                console.log(TokenProvider.getExpirationDate(token));\r\n                history.push(`/Home`);\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"Promise Rejected\", err.message, err.response.data);\r\n            if (err.response.data.message === 'Unauthorized') {\r\n                setIncorrectPasswordAlert(true);\r\n            }\r\n        })\r\n    }\r\n\r\n    const HandleIncorrectPasswordAlert = () => {\r\n        if (incorrectPasswordAlert) {\r\n            return (\r\n                <IncorrectPasswordAlert/>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const IncorrectPasswordAlert = () => {\r\n          return (\r\n            <Alert status=\"error\" mb={6}>\r\n              <AlertIcon />\r\n              <AlertTitle mr={-1}></AlertTitle>\r\n              <AlertDescription maxWidth=\"sm\">Wrong Email/Password</AlertDescription>\r\n              <CloseButton position=\"absolute\" onClick={() => setIncorrectPasswordAlert(false)} right=\"-2px\" top=\"8px\"/>\r\n            </Alert>\r\n          )\r\n    }\r\n\r\n    const handleEmail = e => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePassword = e => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Flex direction=\"column\" background={formBackground} p={12} rounded={6}>\r\n                <Heading mb={6}>Log in\r\n                <DarkMode />\r\n                </Heading>\r\n                <Input type=\"text\" onChange={handleEmail} placeholder=\"email\" variant=\"filled\" mb={3}></Input>\r\n                <Input type=\"password\" onChange={handlePassword} placeholder=\"*********\" variant=\"filled\" mb={6}></Input>\r\n                <HandleIncorrectPasswordAlert/>\r\n                <Button onClick={LoginAuthentication} mb={3} colorScheme=\"teal\">Log in</Button>\r\n                <Text>Dont have an account? Sign up!</Text>\r\n                <Button onClick={() => history.push(`/Register`)} mb={6} colorScheme=\"red\">Sign up</Button>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}