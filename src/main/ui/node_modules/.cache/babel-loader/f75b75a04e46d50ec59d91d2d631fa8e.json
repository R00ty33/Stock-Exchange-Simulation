{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\Buy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // API \n\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport Sidebar from './Sidebar';\nimport tokenProvider from './TokenProvider';\nimport { Flex, Button, Input, Heading, Box, useColorMode, useColorModeValue, Alert, AlertIcon, AlertTitle, AlertDescription, CloseButton, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme, Menu, MenuButton, MenuList, MenuItem, MenuItemOption, MenuGroup, MenuOptionGroup, MenuIcon, MenuCommand, MenuDivider, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Buy({\n  symbol\n}) {\n  _s();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [shares, setShares] = useState('');\n\n  const handleShares = e => {\n    setShares(e.target.value);\n  };\n\n  function handleSubmit() {\n    let accessToken = tokenProvider.getAccessToken();\n    axios.post('http://localhost:8080/api/v1/stocks/Trade?accessToken=' + accessToken + '&symbol=' + symbol + '&shares=' + shares + '&transaction=buy', {\n      accessToken: accessToken,\n      symbol: symbol,\n      shares: shares,\n      transaction: 'buy'\n    }).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      width: \"300%\",\n      onClick: onOpen,\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [\"Buy \", symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            onChange: handleShares,\n            placeholder: \"Number of shares\",\n            variant: \"filled\",\n            mb: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: handleSubmit,\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Buy, \"OriUDo7eFIzhLLRCv1xx+5E6nwk=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = Buy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"sources":["D:/gitHub_projects/Stock/src/main/ui/src/components/Buy.js"],"names":["React","useState","useEffect","axios","useDisclosure","Sidebar","tokenProvider","Flex","Button","Input","Heading","Box","useColorMode","useColorModeValue","Alert","AlertIcon","AlertTitle","AlertDescription","CloseButton","Text","Container","Grid","GridItem","extendTheme","withDefaultColorScheme","Menu","MenuButton","MenuList","MenuItem","MenuItemOption","MenuGroup","MenuOptionGroup","MenuIcon","MenuCommand","MenuDivider","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Buy","symbol","isOpen","onOpen","onClose","shares","setShares","handleShares","e","target","value","handleSubmit","accessToken","getAccessToken","post","transaction","then","response","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // API \r\nimport { useDisclosure } from \"@chakra-ui/react\"\r\nimport Sidebar from './Sidebar';\r\nimport tokenProvider from './TokenProvider';\r\nimport { Flex, Button, Input, Heading, Box, useColorMode, useColorModeValue, Alert, AlertIcon, AlertTitle, \r\n    AlertDescription, CloseButton, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme,\r\n    Menu, MenuButton, MenuList, MenuItem, MenuItemOption, MenuGroup, MenuOptionGroup, MenuIcon, MenuCommand, MenuDivider,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n} from '@chakra-ui/react';\r\n\r\nexport default function Buy({symbol}) {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [ shares, setShares] = useState('');\r\n\r\n    const handleShares = (e) => {\r\n        setShares(e.target.value);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        let accessToken = tokenProvider.getAccessToken();\r\n        axios.post('http://localhost:8080/api/v1/stocks/Trade?accessToken=' + accessToken + '&symbol=' + symbol + '&shares=' + shares + '&transaction=buy', {\r\n            accessToken: accessToken,\r\n            symbol: symbol,\r\n            shares: shares,\r\n            transaction: 'buy',\r\n        }).then((response) => {  \r\n            console.log(response);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button width=\"300%\" onClick={onOpen}>Buy</Button>\r\n            <Modal isOpen={isOpen} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Buy {symbol}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Input type=\"text\" onChange={handleShares} placeholder=\"Number of shares\" variant=\"filled\" mb={3}></Input>\r\n                    </ModalBody>\r\n                    \r\n                    <ModalFooter>\r\n                        <Button colorScheme=\"blue\" mr={3} onClick={handleSubmit}>\r\n                            Buy\r\n                        </Button>\r\n                        <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n                            Close\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}