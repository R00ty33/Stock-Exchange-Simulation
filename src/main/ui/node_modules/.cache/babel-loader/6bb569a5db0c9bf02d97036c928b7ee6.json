{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\StocksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Flex, Heading, useColorMode, useColorModeValue, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { DarkMode } from './DarkMode';\nimport tokenProvider from './TokenProvider';\nimport Sidebar from './Sidebar';\nimport axios from 'axios'; // API \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StocksPage() {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  /** Changes ColorMode */\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const [modeName, setModeName] = useState('Dark Mode');\n  /** Determines Light or Dark Mode Name */\n\n  const [test, setTest] = useState('');\n\n  async function get_GME_PRICE() {\n    try {\n      let res = await axios.get('http://localhost:8080/api/v1/stocks');\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  get_GME_PRICE().then(res => setTest(res.ask));\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        h: \"400px\",\n        templateColumns: \"repeat(5, 1lfr)\",\n        gap: 4,\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          rowSpan: 2,\n          colSpan: 1,\n          bg: \"tomato\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: test\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 3,\n          bg: \"tomato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StocksPage, \"WYx6wbrmP9l3/HX3w6rtdZ1TAUM=\", false, function () {\n  return [useColorMode, useColorModeValue];\n});\n\n_c = StocksPage;\nexport default StocksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/StocksPage.js"],"names":["React","useState","Flex","Heading","useColorMode","useColorModeValue","Text","Container","Grid","GridItem","extendTheme","withDefaultColorScheme","useHistory","DarkMode","tokenProvider","Sidebar","axios","StocksPage","toggleColorMode","formBackground","modeName","setModeName","test","setTest","get_GME_PRICE","res","get","data","err","console","log","then","ask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,YAAxB,EAAsCC,iBAAtC,EAAyDC,IAAzD,EAA+DC,SAA/D,EAA0EC,IAA1E,EAAgFC,QAAhF,EAA0FC,WAA1F,EAAuGC,sBAAvG,QAAoI,kBAApI;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;;;AAE3B,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAsBd,YAAY,EAAxC;AAA4C;;AAC5C,QAAMe,cAAc,GAAGd,iBAAiB,CAAC,UAAD,EAAa,UAAb,CAAxC;AAAiE;;AACjE,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,WAAD,CAAxC;AAAuD;;AACvD,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;;AACA,iBAAeuB,aAAf,GAA+B;AAC3B,QAAI;AACA,UAAIC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,qCAAV,CAAhB;AACA,aAAOD,GAAG,CAACE,IAAX;AACH,KAHD,CAIA,OAAOC,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AACDJ,EAAAA,aAAa,GAAGO,IAAhB,CAAqBN,GAAG,IAAIF,OAAO,CAACE,GAAG,CAACO,GAAL,CAAnC;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,CAAC,EAAC,MAAR;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,cAAhB;AAAA,6BACI,QAAC,IAAD;AACA,QAAA,CAAC,EAAC,OADF;AAEA,QAAA,eAAe,EAAC,iBAFhB;AAGA,QAAA,GAAG,EAAE,CAHL;AAAA,gCAKI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,CAAnB;AAAsB,UAAA,OAAO,EAAE,CAA/B;AAAkC,UAAA,EAAE,EAAC,QAArC;AAAA,iCAA8C,QAAC,IAAD;AAAA,sBAAOV;AAAP;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,CAAnB;AAAsB,UAAA,EAAE,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,CAAnB;AAAsB,UAAA,EAAE,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,CAAnB;AAAsB,UAAA,EAAE,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAlCQL,U;UACuBb,Y,EACLC,iB;;;KAFlBY,U;AAoCT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Flex, Heading, useColorMode, useColorModeValue, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme} from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DarkMode } from './DarkMode';\r\nimport tokenProvider from './TokenProvider';\r\nimport Sidebar from './Sidebar';\r\nimport axios from 'axios'; // API \r\n\r\nfunction StocksPage() {\r\n    const { toggleColorMode } = useColorMode(); /** Changes ColorMode */\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */\r\n    const [modeName, setModeName] = useState('Dark Mode'); /** Determines Light or Dark Mode Name */\r\n    const [test, setTest] = useState('');\r\n    async function get_GME_PRICE() {\r\n        try {\r\n            let res = await axios.get('http://localhost:8080/api/v1/stocks');\r\n            return res.data;\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    get_GME_PRICE().then(res => setTest(res.ask))\r\n\r\n\r\n    return (\r\n        <Flex w=\"100%\">\r\n            <Sidebar />\r\n            <Container maxW=\"container.xl\">\r\n                <Grid \r\n                h=\"400px\"\r\n                templateColumns=\"repeat(5, 1lfr)\"\r\n                gap={4}\r\n                >\r\n                    <GridItem rowSpan={2} colSpan={1} bg=\"tomato\"><Text>{test}</Text></GridItem>\r\n                    <GridItem colSpan={2} bg=\"papayawhip\"/>\r\n                    <GridItem colSpan={2} bg=\"papayawhip\"/>\r\n                    <GridItem colSpan={3} bg=\"tomato\" />\r\n                </Grid>\r\n            </Container>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default StocksPage"]},"metadata":{},"sourceType":"module"}