{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\UserRegistration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios'; // API \n\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { Button, Flex, Heading, Input, useColorMode, useColorModeValue } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserRegistration() {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  /** Changes ColorMode */\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const [modeName, setModeName] = useState('Dark Mode');\n  /** Determines Light or Dark Mode Name */\n\n  const handleModeName = () => {\n    /** handles toggleColorMode & modeName */\n    if (formBackground == \"gray.100\") {\n      setModeName(\"Light Mode\");\n    } else {\n      setModeName(\"Dark Mode\");\n    }\n\n    toggleColorMode();\n  };\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const register = () => {\n    Axios.post('http://localhost:8080/api/v1/users', {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      DOB: password\n    }).then(response => {\n      console.log(response.data);\n    }).catch(err => {\n      console.log(\"Promise Rejected\", err.response.data);\n    });\n  };\n\n  const handleFirstName = e => {\n    setFirstName(e.target.value);\n  };\n\n  const handleLastName = e => {\n    setLastName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      background: formBackground,\n      p: 12,\n      rounded: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 6,\n        children: [\"Log in\", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleModeName,\n          ml: 6,\n          size: \"xs\",\n          children: modeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: email,\n        onClick: handleEmail,\n        placeholder: \"email\",\n        variant: \"filled\",\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: password,\n        onClick: handlePassword,\n        placeholder: \"*********\",\n        variant: \"filled\",\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: firstName,\n        onClick: handleFirstName,\n        placeholder: \"first name\",\n        variant: \"filled\",\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: lastName,\n        onClick: handleLastName,\n        placeholder: \"last name\",\n        variant: \"filled\",\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: register,\n        mb: 6,\n        colorScheme: \"teal\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserRegistration, \"D0x0b2frTwUU49lKcsPXyHlnXi8=\", false, function () {\n  return [useColorMode, useColorModeValue];\n});\n\n_c = UserRegistration;\nexport default UserRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRegistration\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/UserRegistration.js"],"names":["React","useState","Axios","ChakraProvider","Button","Flex","Heading","Input","useColorMode","useColorModeValue","UserRegistration","toggleColorMode","formBackground","modeName","setModeName","handleModeName","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","register","post","DOB","then","response","console","log","data","catch","err","handleFirstName","e","target","value","handleLastName","handleEmail","handlePassword"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Axios from 'axios'; // API \r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { Button, Flex, Heading, Input, useColorMode, useColorModeValue } from '@chakra-ui/react';\r\n\r\n\r\nfunction UserRegistration() {\r\n    const { toggleColorMode } = useColorMode(); /** Changes ColorMode */\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */\r\n    const [modeName, setModeName] = useState('Dark Mode'); /** Determines Light or Dark Mode Name */\r\n\r\n    const handleModeName = () => { /** handles toggleColorMode & modeName */ \r\n        if (formBackground == \"gray.100\") {\r\n            setModeName(\"Light Mode\");\r\n        } else {\r\n            setModeName(\"Dark Mode\");\r\n        }\r\n        toggleColorMode();\r\n    } \r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const register = () => {\r\n        Axios.post('http://localhost:8080/api/v1/users', {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            DOB: password,\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n        }).catch((err) => {\r\n            console.log(\"Promise Rejected\", err.response.data);\r\n        })\r\n    }\r\n\r\n    const handleFirstName = e => { \r\n        setFirstName(e.target.value)\r\n    }\r\n\r\n    const handleLastName = e => {\r\n        setLastName(e.target.value)\r\n    }\r\n\r\n    const handleEmail = e => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePassword= e => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Flex direction=\"column\" background={formBackground} p={12} rounded={6}>\r\n                <Heading mb={6}>Log in\r\n                <Button onClick={handleModeName} ml={6} size=\"xs\">{modeName}</Button>\r\n                </Heading>\r\n                <Input type=\"text\" value={email} onClick={handleEmail} placeholder=\"email\" variant=\"filled\" mb={3}></Input>\r\n                <Input type=\"password\" value={password} onClick={handlePassword} placeholder=\"*********\" variant=\"filled\" mb={3}></Input>\r\n                <Input type=\"text\" value={firstName} onClick={handleFirstName} placeholder=\"first name\" variant=\"filled\" mb={3}></Input>\r\n                <Input type=\"text\" value={lastName} onClick={handleLastName} placeholder=\"last name\" variant=\"filled\" mb={3}></Input>\r\n                <Button onClick={register} mb={6} colorScheme=\"teal\">Register</Button>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default UserRegistration;"]},"metadata":{},"sourceType":"module"}