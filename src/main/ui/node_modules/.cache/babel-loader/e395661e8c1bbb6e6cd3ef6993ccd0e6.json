{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport tokenProvider from './TokenProvider';\nimport { useHistory } from 'react-router-dom';\nconst AuthProvider = {\n  login: function (newTokens) {\n    tokenProvider.setTokens(newTokens);\n  },\n  logout: _s(function () {\n    _s();\n\n    const history = useHistory();\n    console.log(\"Logged Out\");\n    tokenProvider.setTokens(null);\n    console.log(\"Logged in: \" + tokenProvider.isLoggedIn());\n    console.log(\"Token expired: \" + tokenProvider.isExpired(tokenProvider.getExpirationDate(localStorage.getItem(\"ACCESS_TOKEN\"))));\n    return history.push(\"/Login\");\n  }, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  }),\n  useAuth: _s2(function () {\n    _s2();\n\n    const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\n    /*\r\n    useEffect(() => {\r\n        const listener = (newIsLogged) => {\r\n            setIsLogged(newIsLogged);\r\n        };\r\n              tokenProvider.subscribe(listener);\r\n        return () => {\r\n            tokenProvider.unsubscribe(listener);\r\n        };\r\n    }, []);\r\n    */\n\n    return isLogged;\n  }, \"4rEcbVwkFkX8uvAvCim51cqUK8s=\")\n};\nexport default AuthProvider;","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/AuthProvider.js"],"names":["React","useState","useEffect","tokenProvider","useHistory","AuthProvider","login","newTokens","setTokens","logout","history","console","log","isLoggedIn","isExpired","getExpirationDate","localStorage","getItem","push","useAuth","isLogged","setIsLogged"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,KAAK,EAAE,UAASC,SAAT,EAAoB;AACvBJ,IAAAA,aAAa,CAACK,SAAd,CAAwBD,SAAxB;AACH,GAJgB;AAMjBE,EAAAA,MAAM,KAAE,YAAW;AAAA;;AACf,UAAMC,OAAO,GAAGN,UAAU,EAA1B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAT,IAAAA,aAAa,CAACK,SAAd,CAAwB,IAAxB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBT,aAAa,CAACU,UAAd,EAA5B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBT,aAAa,CAACW,SAAd,CAAwBX,aAAa,CAACY,iBAAd,CAAgCC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAhC,CAAxB,CAAhC;AACA,WAAOP,OAAO,CAACQ,IAAR,CAAa,QAAb,CAAP;AACH,GAPK;AAAA,YACcd,UADd;AAAA,IANW;AAejBe,EAAAA,OAAO,MAAE,YAAW;AAAA;;AAChB,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAACE,aAAa,CAACU,UAAd,EAAD,CAAxC;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,WAAOO,QAAP;AAEH,GAjBM;AAfU,CAArB;AAoCA,eAAef,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport tokenProvider from './TokenProvider';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthProvider = {\r\n\r\n    login: function(newTokens) {\r\n        tokenProvider.setTokens(newTokens);\r\n    },\r\n\r\n    logout: function() {\r\n        const history = useHistory();\r\n        console.log(\"Logged Out\");\r\n        tokenProvider.setTokens(null);\r\n        console.log(\"Logged in: \" + tokenProvider.isLoggedIn())\r\n        console.log(\"Token expired: \" + tokenProvider.isExpired(tokenProvider.getExpirationDate(localStorage.getItem(\"ACCESS_TOKEN\"))));\r\n        return history.push(\"/Login\");\r\n    },\r\n\r\n    useAuth: function() {\r\n        const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\r\n\r\n        /*\r\n        useEffect(() => {\r\n            const listener = (newIsLogged) => {\r\n                setIsLogged(newIsLogged);\r\n            };\r\n    \r\n            tokenProvider.subscribe(listener);\r\n            return () => {\r\n                tokenProvider.unsubscribe(listener);\r\n            };\r\n        }, []);\r\n        */\r\n        return isLogged;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AuthProvider"]},"metadata":{},"sourceType":"module"}