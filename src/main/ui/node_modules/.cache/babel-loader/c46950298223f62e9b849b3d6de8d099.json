{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios'; // API \n\nimport { Button, Flex, Heading, Input, useColorModeValue, Text } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { DarkMode } from './DarkMode';\nimport md5 from 'md5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [incorrectPasswordAlert, setIncorrectPasswordAlert] = useState(false);\n\n  function LoginAuthentication() {\n    let encryptedPassword = md5(password);\n    setPassword(encryptedPassword);\n    Axios.post('http://localhost:8080/api/auth/login', {\n      email: email,\n      password: encryptedPassword\n    }).then(response => {\n      console.log(response.status, response, response.data);\n\n      if (response.data == 'Authentication Success') {\n        history.push(`/Home`);\n      } else {\n        alert('sup');\n      }\n    }).catch(err => {\n      console.log(\"Promise Rejected\", err.message, err.response.data);\n    });\n  }\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    height: \"100vh\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      background: formBackground,\n      p: 12,\n      rounded: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 6,\n        children: [\"Log in\", /*#__PURE__*/_jsxDEV(DarkMode, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: handleEmail,\n        placeholder: \"email\",\n        variant: \"filled\",\n        mb: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        onChange: handlePassword,\n        placeholder: \"*********\",\n        variant: \"filled\",\n        mb: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: LoginAuthentication,\n        mb: 3,\n        colorScheme: \"teal\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Dont have an account? Sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => history.push(`/Register`),\n        mb: 6,\n        colorScheme: \"red\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"p7ZvxtXnrDfbClnvQHYCIGw85Kc=\", false, function () {\n  return [useColorModeValue, useHistory];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/LoginPage.js"],"names":["React","useState","Axios","Button","Flex","Heading","Input","useColorModeValue","Text","useHistory","DarkMode","md5","LoginPage","formBackground","history","email","setEmail","password","setPassword","incorrectPasswordAlert","setIncorrectPasswordAlert","LoginAuthentication","encryptedPassword","post","then","response","console","log","status","data","push","alert","catch","err","message","handleEmail","e","target","value","handlePassword"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Axios from 'axios'; // API \r\nimport { Button, Flex, Heading, Input, useColorModeValue, Text } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DarkMode } from './DarkMode';\r\nimport md5 from 'md5';\r\n\r\nfunction LoginPage() {\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */  \r\n    const history = useHistory();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [incorrectPasswordAlert, setIncorrectPasswordAlert] = useState(false);\r\n\r\n    function LoginAuthentication() {\r\n        let encryptedPassword = md5(password);\r\n        setPassword(encryptedPassword);\r\n        Axios.post('http://localhost:8080/api/auth/login', {\r\n            email: email,\r\n            password: encryptedPassword\r\n        }).then((response) => {\r\n            console.log(response.status, response, response.data);\r\n            if (response.data == 'Authentication Success') {\r\n                history.push(`/Home`);\r\n            }\r\n            else {\r\n                alert('sup');\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"Promise Rejected\", err.message, err.response.data);\r\n        })\r\n    }\r\n\r\n    const handleEmail = e => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePassword = e => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Flex height=\"100vh\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Flex direction=\"column\" background={formBackground} p={12} rounded={6}>\r\n                <Heading mb={6}>Log in\r\n                <DarkMode />\r\n                </Heading>\r\n                <Input type=\"text\" onChange={handleEmail} placeholder=\"email\" variant=\"filled\" mb={3}></Input>\r\n                <Input type=\"password\" onChange={handlePassword} placeholder=\"*********\" variant=\"filled\" mb={6}></Input>\r\n                <Button onClick={LoginAuthentication} mb={3} colorScheme=\"teal\">Log in</Button>\r\n                <Text>Dont have an account? Sign up!</Text>\r\n                <Button onClick={() => history.push(`/Register`)} mb={6} colorScheme=\"red\">Sign up</Button>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}