{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\PrivateRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport authProvider from './AuthProvider';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    if (authProvider.useAuth) {\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false);\n    }\n  }, [auth]);\n\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"EGoDdq0+//obEnuVfPDUlExLP5c=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/PrivateRoute.jsx"],"names":["React","useEffect","useState","Route","Redirect","useSelector","authProvider","PrivateRoute","component","Component","rest","auth","state","isAuthenticated","setIsAuthenticated","useAuth","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AACxD,QAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM,CAACE,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,IAAD,CAAtD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,YAAY,CAACS,OAAjB,EAA0B;AACtBD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,KAFD,MAGK;AACDA,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH;AACJ,GAPQ,EAON,CAACH,IAAD,CAPM,CAAT;;AASA,MAAIE,eAAe,KAAK,IAAxB,EAA8B;AAC1B,wBAAO,qCAAP;AACH;;AAED,sBACI,QAAC,KAAD,OAAWH,IAAX;AAAiB,IAAA,MAAM,EAAEM,KAAK,IAC1B,CAACH,eAAD,gBACE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1BD;;GAAMT,Y;UACWF,W;;;KADXE,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from \"react-redux\";\r\nimport authProvider from './AuthProvider';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null)  \r\n    useEffect(() => {\r\n        if (authProvider.useAuth) {\r\n            setIsAuthenticated(true);\r\n        }\r\n        else {\r\n            setIsAuthenticated(false);\r\n        }\r\n    }, [auth])\r\n\r\n    if (isAuthenticated === null) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <Route {...rest} render={props =>\r\n            !isAuthenticated ? (\r\n              <Redirect to='/login'/>\r\n            ) : (\r\n              <Component {...props} />\r\n            )\r\n        }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}