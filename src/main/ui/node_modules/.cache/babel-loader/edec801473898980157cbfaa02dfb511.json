{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\LeaderBoardPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Heading, useColorMode, useColorModeValue, Button, Box, Container, Grid, GridItem, extendTheme, withDefaultColorScheme } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { DarkMode } from './DarkMode';\nimport axios from 'axios'; // API \n\nimport tokenProvider from './TokenProvider';\nimport Sidebar from './Sidebar';\nimport authProvider from './AuthProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeaderBoard() {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  /** Changes ColorMode */\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const [modeName, setModeName] = useState('Dark Mode');\n  /** Determines Light or Dark Mode Name */\n\n  const history = useHistory();\n  const [leaderBoardData, setLeaderBoardData] = useState('');\n\n  function handleSubmit() {\n    axios.get('http://localhost:8080/api/v1/LeaderBoard/GetLeaderBoard', {}).then(response => {\n      console.log(response);\n      setLeaderBoardData(response.data[0][1]);\n    }).catch(error => {\n      if (error.message = 'Request failed with status code 500') {} else {\n        console.log(error.message);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      height: \"100vh\",\n      mt: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        ml: 8,\n        children: \"LeaderBoard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleSubmit()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), leaderBoardData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LeaderBoard, \"JKupnaIqBljhgCpnZGOijr0meHw=\", false, function () {\n  return [useColorMode, useColorModeValue, useHistory];\n});\n\n_c = LeaderBoard;\nexport default LeaderBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaderBoard\");","map":{"version":3,"sources":["D:/gitHub_projects/Stock/src/main/ui/src/components/LeaderBoardPage.js"],"names":["React","useState","useEffect","Flex","Heading","useColorMode","useColorModeValue","Button","Box","Container","Grid","GridItem","extendTheme","withDefaultColorScheme","useHistory","DarkMode","axios","tokenProvider","Sidebar","authProvider","LeaderBoard","toggleColorMode","formBackground","modeName","setModeName","history","leaderBoardData","setLeaderBoardData","handleSubmit","get","then","response","console","log","data","catch","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,YAAxB,EAAsCC,iBAAtC,EAAyDC,MAAzD,EAAiEC,GAAjE,EAAsEC,SAAtE,EAAiFC,IAAjF,EAAuFC,QAAvF,EAAiGC,WAAjG,EAA8GC,sBAA9G,QAA2I,kBAA3I;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAsBhB,YAAY,EAAxC;AAA4C;;AAC5C,QAAMiB,cAAc,GAAGhB,iBAAiB,CAAC,UAAD,EAAa,UAAb,CAAxC;AAAiE;;AACjE,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,WAAD,CAAxC;AAAuD;;AACvD,QAAMwB,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwC1B,QAAQ,CAAC,EAAD,CAAtD;;AAEA,WAAS2B,YAAT,GAAwB;AACpBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,yDAAV,EAAqE,EAArE,EACGC,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAJ,MAAAA,kBAAkB,CAACI,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiB,CAAjB,CAAD,CAAlB;AACH,KAJD,EAKCC,KALD,CAKQC,KAAD,IAAW;AACd,UAAIA,KAAK,CAACC,OAAN,GAAgB,qCAApB,EAA2D,CAC1D,CADD,MACO;AACHL,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,OAAlB;AACH;AACJ,KAVD;AAWH;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,OAAb;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,EAAE,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMT,YAAY;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKF,eAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA/BQN,W;UACuBf,Y,EACLC,iB,EAEPQ,U;;;KAJXM,W;AAiCT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Flex, Heading, useColorMode, useColorModeValue, Button, Box, Container, Grid, GridItem, extendTheme, withDefaultColorScheme} from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DarkMode } from './DarkMode';\r\nimport axios from 'axios'; // API \r\nimport tokenProvider from './TokenProvider';\r\nimport Sidebar from './Sidebar';\r\nimport authProvider from './AuthProvider';\r\n\r\nfunction LeaderBoard() {\r\n    const { toggleColorMode } = useColorMode(); /** Changes ColorMode */\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */\r\n    const [modeName, setModeName] = useState('Dark Mode'); /** Determines Light or Dark Mode Name */\r\n    const history = useHistory();  \r\n    const [leaderBoardData, setLeaderBoardData] = useState('');\r\n\r\n    function handleSubmit() {\r\n        axios.get('http://localhost:8080/api/v1/LeaderBoard/GetLeaderBoard', {\r\n        }).then((response) => {\r\n            console.log(response);\r\n            setLeaderBoardData(response.data[0][1]);\r\n        })\r\n        .catch((error) => {\r\n            if (error.message = 'Request failed with status code 500') {\r\n            } else {\r\n                console.log(error.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"100%\">\r\n            <Sidebar />\r\n            <Flex height=\"100vh\" mt={6}>\r\n                <Heading ml={8}>LeaderBoard</Heading>\r\n                <Button onClick={() => handleSubmit()}></Button>\r\n                {leaderBoardData}\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default LeaderBoard"]},"metadata":{},"sourceType":"module"}