{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nrudo\\\\Documents\\\\gitHub_projects\\\\Stock\\\\src\\\\main\\\\ui\\\\src\\\\components\\\\StocksPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Flex, Button, Heading, useColorMode, useColorModeValue, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { DarkMode } from './DarkMode';\nimport tokenProvider from './TokenProvider';\nimport Sidebar from './Sidebar';\nimport axios from 'axios'; // API \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StocksPage() {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  /** Changes ColorMode */\n\n  const formBackground = useColorModeValue(\"gray.100\", \"gray.700\");\n  /** Light Mode = gray.100,     Dark Mode = gray.700 */\n\n  const [modeName, setModeName] = useState('Dark Mode');\n  /** Determines Light or Dark Mode Name */\n\n  const [GME_PRICE, set_GME_PRICE] = useState('');\n  const [GME_PERCENT, set_GME_PERCENT] = useState('');\n\n  async function get_GME_PRICE() {\n    try {\n      let [data] = await Promise.all([axios.get('http://localhost:8080/api/v1/stocks')]).then(set_GME_PRICE(data));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  get_GME_PRICE();\n\n  function buy(symbol, price) {\n    const params = new URLSearchParams();\n    params.append('symbol', symbol);\n    params.append('price', price);\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    };\n    axios.post('http://localhost:8080/api/login', params, config).then(response => {\n      console.log(response.status, response, response.data);\n    }).catch(err => {\n      console.log(\"Promise Rejected\", err.message, err.response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    w: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        h: \"400px\",\n        templateColumns: \"repeat(5, 1lfr)\",\n        gap: 4,\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          rowSpan: 2,\n          colSpan: 1,\n          bg: \"tomato\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: [\"GME PRICE = \", GME_PRICE, \" GME PERCENT = \", GME_PERCENT]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => buy('GME', GME_PRICE),\n            children: \"Buy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 2,\n          bg: \"papayawhip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colSpan: 3,\n          bg: \"tomato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StocksPage, \"YNVUSj6Ppf4MR4FjRRvA2KdX9mQ=\", false, function () {\n  return [useColorMode, useColorModeValue];\n});\n\n_c = StocksPage;\nexport default StocksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/StocksPage.js"],"names":["React","useState","Flex","Button","Heading","useColorMode","useColorModeValue","Text","Container","Grid","GridItem","extendTheme","withDefaultColorScheme","useHistory","DarkMode","tokenProvider","Sidebar","axios","StocksPage","toggleColorMode","formBackground","modeName","setModeName","GME_PRICE","set_GME_PRICE","GME_PERCENT","set_GME_PERCENT","get_GME_PRICE","data","Promise","all","get","then","err","console","log","buy","symbol","price","params","URLSearchParams","append","config","headers","post","response","status","catch","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Flex, Button, Heading, useColorMode, useColorModeValue, Text, Container, Grid, GridItem, extendTheme, withDefaultColorScheme} from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DarkMode } from './DarkMode';\r\nimport tokenProvider from './TokenProvider';\r\nimport Sidebar from './Sidebar';\r\nimport axios from 'axios'; // API \r\n\r\nfunction StocksPage() {\r\n    const { toggleColorMode } = useColorMode(); /** Changes ColorMode */\r\n    const formBackground = useColorModeValue(\"gray.100\", \"gray.700\") /** Light Mode = gray.100,     Dark Mode = gray.700 */\r\n    const [modeName, setModeName] = useState('Dark Mode'); /** Determines Light or Dark Mode Name */\r\n    const [GME_PRICE, set_GME_PRICE] = useState('');\r\n    const [GME_PERCENT, set_GME_PERCENT] = useState('');\r\n\r\n    async function get_GME_PRICE() {\r\n        try {\r\n            let [data] = await Promise.all([\r\n                axios.get('http://localhost:8080/api/v1/stocks')\r\n            ]).then(set_GME_PRICE(data))\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    get_GME_PRICE();\r\n\r\n    function buy(symbol, price) {\r\n        const params = new URLSearchParams();\r\n        params.append('symbol', symbol);\r\n        params.append('price', price);\r\n\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n        axios.post('http://localhost:8080/api/login', params, config).then((response) => {\r\n            console.log(response.status, response, response.data);\r\n        }).catch((err) => {\r\n            console.log(\"Promise Rejected\", err.message, err.response.data);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Flex w=\"100%\">\r\n            <Sidebar />\r\n            <Container maxW=\"container.xl\">\r\n                <Grid \r\n                h=\"400px\"\r\n                templateColumns=\"repeat(5, 1lfr)\"\r\n                gap={4}\r\n                >\r\n                    <GridItem rowSpan={2} colSpan={1} bg=\"tomato\">\r\n                        <Text>GME PRICE = {GME_PRICE} GME PERCENT = {GME_PERCENT}</Text>\r\n                        <Button onClick={() => buy('GME', GME_PRICE)}>Buy</Button>\r\n                    </GridItem>\r\n                    <GridItem colSpan={2} bg=\"papayawhip\"/>\r\n                    <GridItem colSpan={2} bg=\"papayawhip\"/>\r\n                    <GridItem colSpan={3} bg=\"tomato\" />\r\n                </Grid>\r\n            </Container>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default StocksPage"]},"metadata":{},"sourceType":"module"}