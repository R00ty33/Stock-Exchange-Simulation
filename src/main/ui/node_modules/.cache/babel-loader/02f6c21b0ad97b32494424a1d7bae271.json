{"ast":null,"code":"import React from 'react';\n\nconst TokenProvider = () => {\n  const getExpirationDate = jwtToken => {\n    if (!jwtToken) {\n      return null;\n    }\n\n    const jwt = JSON.parse(atob(jwtToken.split('.')[1])); // multiply by 1000 to convert seconds into milliseconds\n\n    return jwt && jwt.exp && jwt.exp * 1000;\n  };\n};\n\n_c = TokenProvider;\nmodule.exports = TokenProvider();\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/TokenProvider.js"],"names":["React","TokenProvider","getExpirationDate","jwtToken","jwt","JSON","parse","atob","split","exp","module","exports"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACpC,QAAI,CAACA,QAAL,EAAe;AACX,aAAO,IAAP;AACH;;AAED,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CAAf,CAAZ,CALoC,CAOpC;;AACA,WAAOJ,GAAG,IAAIA,GAAG,CAACK,GAAX,IAAkBL,GAAG,CAACK,GAAJ,GAAU,IAAnC;AACH,GATD;AAUH,CAXD;;KAAMR,a;AAaNS,MAAM,CAACC,OAAP,GAAiBV,aAAa,EAA9B","sourcesContent":["import React from 'react';\r\n\r\nconst TokenProvider = () => {\r\n    const getExpirationDate = (jwtToken) => {\r\n        if (!jwtToken) {\r\n            return null;\r\n        }\r\n    \r\n        const jwt = JSON.parse(atob(jwtToken.split('.')[1]));\r\n    \r\n        // multiply by 1000 to convert seconds into milliseconds\r\n        return jwt && jwt.exp && jwt.exp * 1000;\r\n    };\r\n}\r\n\r\nmodule.exports = TokenProvider();"]},"metadata":{},"sourceType":"module"}