{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport tokenProvider from './TokenProvider';\nexport const AuthProvider = () => {\n  var _s = $RefreshSig$();\n\n  return {\n    login: function (newTokens) {\n      tokenProvider.setTokens(newTokens);\n    },\n    logout: function () {\n      tokenProvider.setTokens(null);\n    },\n    useAuth: _s(function () {\n      _s();\n\n      const [isLogged, setIsLogged] = useState(tokenProvider.isLogged());\n      useEffect(() => {\n        const listener = newIsLogged => {\n          setIsLogged(newIsLogged);\n        };\n\n        tokenProvider.subscribe(listener);\n        return () => {\n          tokenProvider.unsubscribe(listener);\n        };\n      }, []);\n      return [isLogged];\n    }, \"kE0xl300w+Xzr0Pn2h4vMj6X0bI=\")\n  };\n};\n_c = AuthProvider;\nexport default ({\n  useAuth,\n  login,\n  logout\n} = AuthProvider());\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Nrudo/Documents/gitHub_projects/Stock/src/main/ui/src/components/AuthProvider.js"],"names":["React","useState","useEffect","tokenProvider","AuthProvider","login","newTokens","setTokens","logout","useAuth","isLogged","setIsLogged","listener","newIsLogged","subscribe","unsubscribe"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,SAAO;AACHC,IAAAA,KAAK,EAAE,UAASC,SAAT,EAAoB;AACvBH,MAAAA,aAAa,CAACI,SAAd,CAAwBD,SAAxB;AACH,KAHE;AAKHE,IAAAA,MAAM,EAAE,YAAW;AACfL,MAAAA,aAAa,CAACI,SAAd,CAAwB,IAAxB;AACH,KAPE;AASHE,IAAAA,OAAO,KAAE,YAAW;AAAA;;AAChB,YAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACE,aAAa,CAACO,QAAd,EAAD,CAAxC;AAEAR,MAAAA,SAAS,CAAC,MAAM;AACZ,cAAMU,QAAQ,GAAIC,WAAD,IAAiB;AAC9BF,UAAAA,WAAW,CAACE,WAAD,CAAX;AACH,SAFD;;AAIAV,QAAAA,aAAa,CAACW,SAAd,CAAwBF,QAAxB;AACA,eAAO,MAAM;AACTT,UAAAA,aAAa,CAACY,WAAd,CAA0BH,QAA1B;AACH,SAFD;AAGH,OATQ,EASN,EATM,CAAT;AAWA,aAAO,CAACF,QAAD,CAAP;AACH,KAfM;AATJ,GAAP;AA0BH,CA3BM;KAAMN,Y;AA6Bb,gBAAe;AAACK,EAAAA,OAAD;AAAUJ,EAAAA,KAAV;AAAiBG,EAAAA;AAAjB,IAA2BJ,YAAY,EAAtD","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport tokenProvider from './TokenProvider';\r\n\r\nexport const AuthProvider = () => {\r\n    return {\r\n        login: function(newTokens) {\r\n            tokenProvider.setTokens(newTokens);\r\n        },\r\n\r\n        logout: function() {\r\n            tokenProvider.setTokens(null);\r\n        },\r\n\r\n        useAuth: function() {\r\n            const [isLogged, setIsLogged] = useState(tokenProvider.isLogged());\r\n\r\n            useEffect(() => {\r\n                const listener = (newIsLogged) => {\r\n                    setIsLogged(newIsLogged);\r\n                };\r\n\r\n                tokenProvider.subscribe(listener);\r\n                return () => {\r\n                    tokenProvider.unsubscribe(listener);\r\n                };\r\n            }, []);\r\n\r\n            return [isLogged];\r\n        }\r\n    }\r\n}\r\n\r\nexport default {useAuth, login, logout} = AuthProvider();"]},"metadata":{},"sourceType":"module"}