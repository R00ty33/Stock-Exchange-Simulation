{"version":3,"sources":["../../src/use-outside-click.ts"],"names":["getOwnerDocument","useEffect","useRef","useCallbackRef","useOutsideClick","props","ref","handler","savedHandler","stateRef","isPointerDown","ignoreEmulatedMouseEvents","state","current","onPointerDown","e","isValidEvent","onMouseUp","event","onTouchEnd","doc","addEventListener","removeEventListener","target","button","body","contains"],"mappings":"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","sourcesContent":["import { getOwnerDocument } from \"@chakra-ui/utils\"\nimport { RefObject, useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport interface UseOutsideClickProps {\n  /**\n   * The reference to a DOM element.\n   */\n  ref: RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state])\n}\n\nfunction isValidEvent(event: any, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n  if (event.button > 0) return false\n  // if the event target is no longer in the document\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.body.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n"],"file":"use-outside-click.js"}