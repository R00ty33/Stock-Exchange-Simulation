{"version":3,"sources":["../../src/use-slider.ts"],"names":["useBoolean","useCallbackRef","useControllableState","useDimensions","useIds","useLatestRef","usePanGesture","usePrevious","useUpdateEffect","mergeRefs","ariaAttr","callAllHandlers","clampValue","dataAttr","focus","getBox","normalizeEventKey","percentToValue","roundValueToStep","valueToPercent","useCallback","useMemo","useRef","getPartsStyle","useSlider","props","min","max","onChange","value","valueProp","defaultValue","isReversed","orientation","id","idProp","isDisabled","isReadOnly","onChangeStart","onChangeStartProp","onChangeEnd","onChangeEndProp","step","getAriaValueText","getAriaValueTextProp","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","htmlProps","computedValue","setValue","getDefaultValue","isDragging","setDragging","prevIsDragging","isFocused","setFocused","eventSourceRef","isInteractive","valueRef","prevRef","current","reversedValue","trackValue","trackPercent","isVertical","trackRef","thumbRef","rootRef","thumbId","trackId","getValueFromPointer","event","trackRect","borderBox","clientX","clientY","touches","diff","bottom","left","length","height","width","percent","nextValue","parseFloat","tenSteps","oneStep","constrain","actions","stepUp","next","stepDown","reset","stepTo","onKeyDown","eventKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","preventDefault","stopPropagation","valueText","thumbBoxModel","thumbStyle","rootStyle","trackStyle","innerTrackStyle","thumbRect","focusThumb","setTimeout","setValueFromPointer","onPanSessionStart","on","onPanSessionEnd","off","onPanStart","onPan","onPanEnd","getRootProps","ref","tabIndex","style","getTrackProps","getInnerTrackProps","getThumbProps","role","undefined","onFocus","onBlur","getMarkerProps","isInRange","isHighlighted","markerPercent","markerStyle","position","pointerEvents","orient","vertical","horizontal","getInputProps","type","state","options"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useCallbackRef,\n  useControllableState,\n  useDimensions,\n  useIds,\n  useLatestRef,\n  usePanGesture,\n  usePrevious,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { EventKeyMap, mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  AnyPointerEvent,\n  ariaAttr,\n  callAllHandlers,\n  clampValue,\n  dataAttr,\n  focus,\n  getBox,\n  normalizeEventKey,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/utils\"\nimport { CSSProperties, useCallback, useMemo, useRef } from \"react\"\nimport { getPartsStyle } from \"./slider-utils\"\n\nexport interface UseSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number\n  /**\n   * orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * function gets called whenever the user starts dragging the slider handle\n   */\n  onChangeStart?(value: number): void\n  /**\n   * function gets called whenever the user stops dragging the slider handle.\n   */\n  onChangeEnd?(value: number): void\n  /**\n   * function gets called whenever the slider handle is being dragged or clicked\n   */\n  onChange?(value: number): void\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string\n  /**\n   * If `true`, the slider will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useSlider(props: UseSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed,\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange,\n  })\n\n  const [isDragging, setDragging] = useBoolean()\n  const prevIsDragging = usePrevious(isDragging)\n\n  const [isFocused, setFocused] = useBoolean()\n  const eventSourceRef = useRef<\"pointer\" | \"keyboard\" | null>(null)\n\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n  const value = clampValue(computedValue, min, max)\n  const valueRef = useLatestRef(value)\n\n  const prevRef = useRef(valueRef.current)\n\n  const reversedValue = max - value + min\n  const trackValue = isReversed ? reversedValue : value\n  const trackPercent = valueToPercent(trackValue, min, max)\n\n  const isVertical = orientation === \"vertical\"\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<any>(null)\n  const thumbRef = useRef<any>(null)\n  const rootRef = useRef<any>(null)\n\n  /**\n   * Generate unique ids for component parts\n   */\n  const [thumbId, trackId] = useIds(idProp, `slider-thumb`, `slider-track`)\n\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   *\n   * @todo - Refactor this later on to use info from pan session\n   */\n\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current) return\n      eventSourceRef.current = \"pointer\"\n      const trackRect = getBox(trackRef.current).borderBox\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical\n        ? trackRect.bottom - clientY\n        : clientX - trackRect.left\n\n      const length = isVertical ? trackRect.height : trackRect.width\n      let percent = diff / length\n\n      if (isReversed) {\n        percent = 1 - percent\n      }\n\n      let nextValue = percentToValue(percent, min, max)\n\n      if (step) {\n        nextValue = parseFloat(roundValueToStep(nextValue, min, step))\n      }\n\n      nextValue = clampValue(nextValue, min, max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, max, min, step],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const constrain = useCallback(\n    (value: number) => {\n      if (!isInteractive) return\n      value = parseFloat(roundValueToStep(value, min, oneStep))\n      value = clampValue(value, min, max)\n      setValue(value)\n    },\n    [oneStep, max, min, setValue, isInteractive],\n  )\n\n  const actions = useMemo(\n    () => ({\n      stepUp: (step = oneStep) => {\n        const next = isReversed ? value - step : value + step\n        constrain(next)\n      },\n      stepDown: (step = oneStep) => {\n        const next = isReversed ? value + step : value - step\n        constrain(next)\n      },\n      reset: () => constrain(defaultValue || 0),\n      stepTo: (value: number) => constrain(value),\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        ArrowRight: () => actions.stepUp(),\n        ArrowUp: () => actions.stepUp(),\n        ArrowLeft: () => actions.stepDown(),\n        ArrowDown: () => actions.stepDown(),\n        PageUp: () => actions.stepUp(tenSteps),\n        PageDown: () => actions.stepDown(tenSteps),\n        Home: () => constrain(min),\n        End: () => constrain(max),\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        eventSourceRef.current = \"keyboard\"\n      }\n    },\n    [actions, constrain, max, min, tenSteps],\n  )\n\n  /**\n   * ARIA (Optional): To define a human readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n  const valueText = getAriaValueText?.(value) ?? ariaValueText\n\n  /**\n   * Measure the dimensions of the thumb so\n   * we can center it within the track properly\n   */\n  const thumbBoxModel = useDimensions(thumbRef)\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { thumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(() => {\n    const thumbRect = thumbBoxModel?.borderBox ?? { width: 0, height: 0 }\n    return getPartsStyle({\n      isReversed,\n      orientation,\n      thumbRect,\n      trackPercent,\n    })\n  }, [isReversed, orientation, thumbBoxModel?.borderBox, trackPercent])\n\n  const focusThumb = useCallback(() => {\n    if (thumbRef.current && focusThumbOnChange) {\n      setTimeout(() => focus(thumbRef.current))\n    }\n  }, [focusThumbOnChange])\n\n  useUpdateEffect(() => {\n    focusThumb()\n    if (eventSourceRef.current === \"keyboard\") {\n      onChangeEndProp?.(valueRef.current)\n    }\n  }, [value, onChangeEndProp])\n\n  const setValueFromPointer = (event: AnyPointerEvent) => {\n    const nextValue = getValueFromPointer(event)\n    if (nextValue != null && nextValue !== valueRef.current) {\n      setValue(nextValue)\n    }\n  }\n\n  usePanGesture(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return\n      setDragging.on()\n      focusThumb()\n      setValueFromPointer(event)\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return\n      setDragging.off()\n      if (!prevIsDragging && prevRef.current !== valueRef.current) {\n        onChangeEnd?.(valueRef.current)\n        prevRef.current = valueRef.current\n      }\n    },\n    onPanStart() {\n      if (!isInteractive) return\n      onChangeStart?.(valueRef.current)\n    },\n    onPan(event) {\n      if (!isInteractive) return\n      setValueFromPointer(event)\n    },\n    onPanEnd() {\n      if (!isInteractive) return\n      onChangeEnd?.(valueRef.current)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: {\n        ...props.style,\n        ...rootStyle,\n      },\n    }),\n    [htmlProps, isDisabled, isFocused, rootStyle],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: {\n        ...props.style,\n        ...trackStyle,\n      },\n    }),\n    [isDisabled, trackId, trackStyle],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      style: {\n        ...props.style,\n        ...innerTrackStyle,\n      },\n    }),\n    [innerTrackStyle],\n  )\n\n  const getThumbProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : undefined,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n      style: {\n        ...props.style,\n        ...thumbStyle,\n      },\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, setFocused.on),\n      onBlur: callAllHandlers(props.onBlur, setFocused.off),\n    }),\n    [\n      ariaLabel,\n      ariaLabelledBy,\n      isDisabled,\n      isDragging,\n      isReadOnly,\n      isInteractive,\n      max,\n      min,\n      onKeyDown,\n      orientation,\n      setFocused.off,\n      setFocused.on,\n      thumbId,\n      thumbStyle,\n      value,\n      valueText,\n    ],\n  )\n\n  const getMarkerProps: PropGetter<any, { value?: any }> = useCallback(\n    (props = {}, ref = null) => {\n      const isInRange = !(props.value < min || props.value > max)\n      const isHighlighted = value >= props.value\n      const markerPercent = valueToPercent(props.value, min, max)\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: {\n            bottom: isReversed\n              ? `${100 - markerPercent}%`\n              : `${markerPercent}%`,\n          },\n          horizontal: {\n            left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n          },\n        }),\n      }\n\n      return {\n        ...props,\n        ref,\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value],\n  )\n\n  const getInputProps: PropGetter<HTMLInputElement> = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      type: \"hidden\",\n      value,\n      name,\n    }),\n    [name, value],\n  )\n\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging,\n    },\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n  }\n}\n\nexport type UseSliderReturn = ReturnType<typeof useSlider>\n\nfunction orient(options: {\n  orientation: UseSliderProps[\"orientation\"]\n  vertical: CSSProperties\n  horizontal: CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\nfunction getDefaultValue(min: number, max: number) {\n  return max < min ? min : min + (max - min) / 2\n}\n"],"file":"use-slider.js"}