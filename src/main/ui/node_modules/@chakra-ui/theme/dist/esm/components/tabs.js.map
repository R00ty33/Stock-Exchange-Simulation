{"version":3,"sources":["../../../src/components/tabs.ts"],"names":["getColor","mode","parts","baseStyleRoot","props","orientation","display","baseStyleTab","isFitted","flex","undefined","transitionProperty","transitionDuration","_focus","zIndex","boxShadow","baseStyleTablist","align","alignments","end","center","start","justifyContent","flexDirection","baseStyleTabpanel","p","baseStyle","root","tab","tablist","tabpanel","sizes","sm","py","px","fontSize","md","lg","variantLine","colorScheme","c","isVertical","borderProp","marginProp","borderColor","_selected","color","_active","bg","_disabled","opacity","cursor","variantEnclosed","borderTopRadius","border","mb","borderBottomColor","borderBottom","variantEnclosedColored","_notLast","marginEnd","borderTopColor","variantSoftRounded","theme","borderRadius","fontWeight","variantSolidRounded","variantUnstyled","variants","line","enclosed","unstyled","defaultProps","size","variant"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,IAAnB,QAA+B,wBAA/B;AAEA,IAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,KAApB,EAA2B,WAA3B,EAAwC,UAAxC,EAAoD,WAApD,CAAd;;AAIA,SAASC,aAAT,CAAuBC,KAAvB,EAAoC;AAClC,MAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,SAAO;AACLE,IAAAA,OAAO,EAAED,WAAW,KAAK,UAAhB,GAA6B,MAA7B,GAAsC;AAD1C,GAAP;AAGD;;AAED,SAASE,YAAT,CAAsBH,KAAtB,EAAmC;AACjC,MAAM;AAAEI,IAAAA;AAAF,MAAeJ,KAArB;AAEA,SAAO;AACLK,IAAAA,IAAI,EAAED,QAAQ,GAAG,CAAH,GAAOE,SADhB;AAELC,IAAAA,kBAAkB,EAAE,QAFf;AAGLC,IAAAA,kBAAkB,EAAE,QAHf;AAILC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,CADF;AAENC,MAAAA,SAAS,EAAE;AAFL;AAJH,GAAP;AASD;;AAED,SAASC,gBAAT,CAA0BZ,KAA1B,EAAuC;AACrC,MAAM;AAAEa,IAAAA,KAAK,GAAG,OAAV;AAAmBZ,IAAAA;AAAnB,MAAmCD,KAAzC;AAEA,MAAMc,UAAU,GAAG;AACjBC,IAAAA,GAAG,EAAE,UADY;AAEjBC,IAAAA,MAAM,EAAE,QAFS;AAGjBC,IAAAA,KAAK,EAAE;AAHU,GAAnB;AAMA,SAAO;AACLC,IAAAA,cAAc,EAAEJ,UAAU,CAACD,KAAD,CADrB;AAELM,IAAAA,aAAa,EAAElB,WAAW,KAAK,UAAhB,GAA6B,QAA7B,GAAwC;AAFlD,GAAP;AAID;;AAED,IAAMmB,iBAAiB,GAAG;AAAEC,EAAAA,CAAC,EAAE;AAAL,CAA1B;;AAEA,IAAMC,SAAS,GAAItB,KAAD,KAAkB;AAClCuB,EAAAA,IAAI,EAAExB,aAAa,CAACC,KAAD,CADe;AAElCwB,EAAAA,GAAG,EAAErB,YAAY,CAACH,KAAD,CAFiB;AAGlCyB,EAAAA,OAAO,EAAEb,gBAAgB,CAACZ,KAAD,CAHS;AAIlC0B,EAAAA,QAAQ,EAAEN;AAJwB,CAAlB,CAAlB;;AAOA,IAAMO,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE;AACFJ,IAAAA,GAAG,EAAE;AACHK,MAAAA,EAAE,EAAE,CADD;AAEHC,MAAAA,EAAE,EAAE,CAFD;AAGHC,MAAAA,QAAQ,EAAE;AAHP;AADH,GADQ;AAQZC,EAAAA,EAAE,EAAE;AACFR,IAAAA,GAAG,EAAE;AACHO,MAAAA,QAAQ,EAAE,IADP;AAEHF,MAAAA,EAAE,EAAE,CAFD;AAGHC,MAAAA,EAAE,EAAE;AAHD;AADH,GARQ;AAeZG,EAAAA,EAAE,EAAE;AACFT,IAAAA,GAAG,EAAE;AACHO,MAAAA,QAAQ,EAAE,IADP;AAEHF,MAAAA,EAAE,EAAE,CAFD;AAGHC,MAAAA,EAAE,EAAE;AAHD;AADH;AAfQ,CAAd;;AAwBA,SAASI,WAAT,CAAqBlC,KAArB,EAAkC;AAChC,MAAM;AAAEmC,IAAAA,WAAW,EAAEC,CAAf;AAAkBnC,IAAAA;AAAlB,MAAkCD,KAAxC;AACA,MAAMqC,UAAU,GAAGpC,WAAW,KAAK,UAAnC;AACA,MAAMqC,UAAU,GAAGrC,WAAW,KAAK,UAAhB,GAA6B,aAA7B,GAA6C,cAAhE;AACA,MAAMsC,UAAU,GAAGF,UAAU,GAAG,aAAH,GAAmB,cAAhD;AAEA,SAAO;AACLZ,IAAAA,OAAO,EAAE;AACP,OAACa,UAAD,GAAc,WADP;AAEPE,MAAAA,WAAW,EAAE;AAFN,KADJ;AAKLhB,IAAAA,GAAG,EAAE;AACH,OAACc,UAAD,GAAc,WADX;AAEHE,MAAAA,WAAW,EAAE,aAFV;AAGH,OAACD,UAAD,GAAc,MAHX;AAIHE,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE7C,IAAI,CAAIuC,CAAJ,WAAgBA,CAAhB,UAAJ,CAA6BpC,KAA7B,CADE;AAETwC,QAAAA,WAAW,EAAE;AAFJ,OAJR;AAQHG,MAAAA,OAAO,EAAE;AACPC,QAAAA,EAAE,EAAE/C,IAAI,CAAC,UAAD,EAAa,gBAAb,CAAJ,CAAmCG,KAAnC;AADG,OARN;AAWH6C,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAE,GADA;AAETC,QAAAA,MAAM,EAAE;AAFC;AAXR;AALA,GAAP;AAsBD;;AAED,SAASC,eAAT,CAAyBhD,KAAzB,EAAsC;AACpC,MAAM;AAAEmC,IAAAA,WAAW,EAAEC;AAAf,MAAqBpC,KAA3B;AACA,SAAO;AACLwB,IAAAA,GAAG,EAAE;AACHyB,MAAAA,eAAe,EAAE,IADd;AAEHC,MAAAA,MAAM,EAAE,WAFL;AAGHV,MAAAA,WAAW,EAAE,aAHV;AAIHW,MAAAA,EAAE,EAAE,MAJD;AAKHV,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE7C,IAAI,CAAIuC,CAAJ,WAAgBA,CAAhB,UAAJ,CAA6BpC,KAA7B,CADE;AAETwC,QAAAA,WAAW,EAAE,SAFJ;AAGTY,QAAAA,iBAAiB,EAAEvD,IAAI,qBAAJ,CAA0BG,KAA1B;AAHV;AALR,KADA;AAYLyB,IAAAA,OAAO,EAAE;AACP0B,MAAAA,EAAE,EAAE,MADG;AAEPE,MAAAA,YAAY,EAAE,WAFP;AAGPb,MAAAA,WAAW,EAAE;AAHN;AAZJ,GAAP;AAkBD;;AAED,SAASc,sBAAT,CAAgCtD,KAAhC,EAA6C;AAC3C,MAAM;AAAEmC,IAAAA,WAAW,EAAEC;AAAf,MAAqBpC,KAA3B;AACA,SAAO;AACLwB,IAAAA,GAAG,EAAE;AACH0B,MAAAA,MAAM,EAAE,WADL;AAEHV,MAAAA,WAAW,EAAE,SAFV;AAGHI,MAAAA,EAAE,EAAE/C,IAAI,4BAAJ,CAAiCG,KAAjC,CAHD;AAIHmD,MAAAA,EAAE,EAAE,MAJD;AAKHI,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE;AADH,OALP;AAQHf,MAAAA,SAAS,EAAE;AACTG,QAAAA,EAAE,EAAE/C,IAAI,SAAS,UAAT,CAAJ,CAAyBG,KAAzB,CADK;AAET0C,QAAAA,KAAK,EAAE7C,IAAI,CAAIuC,CAAJ,WAAgBA,CAAhB,UAAJ,CAA6BpC,KAA7B,CAFE;AAGTwC,QAAAA,WAAW,EAAE,SAHJ;AAITiB,QAAAA,cAAc,EAAE,cAJP;AAKTL,QAAAA,iBAAiB,EAAE;AALV;AARR,KADA;AAiBL3B,IAAAA,OAAO,EAAE;AACP0B,MAAAA,EAAE,EAAE,MADG;AAEPE,MAAAA,YAAY,EAAE,WAFP;AAGPb,MAAAA,WAAW,EAAE;AAHN;AAjBJ,GAAP;AAuBD;;AAED,SAASkB,kBAAT,CAA4B1D,KAA5B,EAAyC;AACvC,MAAM;AAAEmC,IAAAA,WAAW,EAAEC,CAAf;AAAkBuB,IAAAA;AAAlB,MAA4B3D,KAAlC;AACA,SAAO;AACLwB,IAAAA,GAAG,EAAE;AACHoC,MAAAA,YAAY,EAAE,MADX;AAEHC,MAAAA,UAAU,EAAE,UAFT;AAGHnB,MAAAA,KAAK,EAAE,UAHJ;AAIHD,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE9C,QAAQ,CAAC+D,KAAD,EAAWvB,CAAX,UADN;AAETQ,QAAAA,EAAE,EAAEhD,QAAQ,CAAC+D,KAAD,EAAWvB,CAAX;AAFH;AAJR;AADA,GAAP;AAWD;;AAED,SAAS0B,mBAAT,CAA6B9D,KAA7B,EAA0C;AACxC,MAAM;AAAEmC,IAAAA,WAAW,EAAEC;AAAf,MAAqBpC,KAA3B;AACA,SAAO;AACLwB,IAAAA,GAAG,EAAE;AACHoC,MAAAA,YAAY,EAAE,MADX;AAEHC,MAAAA,UAAU,EAAE,UAFT;AAGHnB,MAAAA,KAAK,EAAE7C,IAAI,CAAC,UAAD,EAAa,SAAb,CAAJ,CAA4BG,KAA5B,CAHJ;AAIHyC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE7C,IAAI,SAAS,UAAT,CAAJ,CAAyBG,KAAzB,CADE;AAET4C,QAAAA,EAAE,EAAE/C,IAAI,CAAIuC,CAAJ,WAAgBA,CAAhB,UAAJ,CAA6BpC,KAA7B;AAFK;AAJR;AADA,GAAP;AAWD;;AAED,IAAM+D,eAAe,GAAG,EAAxB;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE/B,WADS;AAEfgC,EAAAA,QAAQ,EAAElB,eAFK;AAGf,sBAAoBM,sBAHL;AAIf,kBAAgBI,kBAJD;AAKf,mBAAiBI,mBALF;AAMfK,EAAAA,QAAQ,EAAEJ;AANK,CAAjB;AASA,IAAMK,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,MAFU;AAGnBnC,EAAAA,WAAW,EAAE;AAHM,CAArB;AAMA,eAAe;AACbrC,EAAAA,KADa;AAEbwB,EAAAA,SAFa;AAGbK,EAAAA,KAHa;AAIbqC,EAAAA,QAJa;AAKbI,EAAAA;AALa,CAAf","sourcesContent":["import { getColor, mode } from \"@chakra-ui/theme-tools\"\n\nconst parts = [\"root\", \"tablist\", \"tab\", \"tabpanels\", \"tabpanel\", \"indicator\"]\n\ntype Dict = Record<string, any>\n\nfunction baseStyleRoot(props: Dict) {\n  const { orientation } = props\n  return {\n    display: orientation === \"vertical\" ? \"flex\" : \"block\",\n  }\n}\n\nfunction baseStyleTab(props: Dict) {\n  const { isFitted } = props\n\n  return {\n    flex: isFitted ? 1 : undefined,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    _focus: {\n      zIndex: 1,\n      boxShadow: \"outline\",\n    },\n  }\n}\n\nfunction baseStyleTablist(props: Dict) {\n  const { align = \"start\", orientation } = props\n\n  const alignments = {\n    end: \"flex-end\",\n    center: \"center\",\n    start: \"flex-start\",\n  }\n\n  return {\n    justifyContent: alignments[align],\n    flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n  }\n}\n\nconst baseStyleTabpanel = { p: 4 }\n\nconst baseStyle = (props: Dict) => ({\n  root: baseStyleRoot(props),\n  tab: baseStyleTab(props),\n  tablist: baseStyleTablist(props),\n  tabpanel: baseStyleTabpanel,\n})\n\nconst sizes = {\n  sm: {\n    tab: {\n      py: 1,\n      px: 4,\n      fontSize: \"sm\",\n    },\n  },\n  md: {\n    tab: {\n      fontSize: \"md\",\n      py: 2,\n      px: 4,\n    },\n  },\n  lg: {\n    tab: {\n      fontSize: \"lg\",\n      py: 3,\n      px: 4,\n    },\n  },\n}\n\nfunction variantLine(props: Dict) {\n  const { colorScheme: c, orientation } = props\n  const isVertical = orientation === \"vertical\"\n  const borderProp = orientation === \"vertical\" ? \"borderStart\" : \"borderBottom\"\n  const marginProp = isVertical ? \"marginStart\" : \"marginBottom\"\n\n  return {\n    tablist: {\n      [borderProp]: \"2px solid\",\n      borderColor: \"inherit\",\n    },\n    tab: {\n      [borderProp]: \"2px solid\",\n      borderColor: \"transparent\",\n      [marginProp]: \"-2px\",\n      _selected: {\n        color: mode(`${c}.600`, `${c}.300`)(props),\n        borderColor: \"currentColor\",\n      },\n      _active: {\n        bg: mode(\"gray.200\", \"whiteAlpha.300\")(props),\n      },\n      _disabled: {\n        opacity: 0.4,\n        cursor: \"not-allowed\",\n      },\n    },\n  }\n}\n\nfunction variantEnclosed(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    tab: {\n      borderTopRadius: \"md\",\n      border: \"1px solid\",\n      borderColor: \"transparent\",\n      mb: \"-1px\",\n      _selected: {\n        color: mode(`${c}.600`, `${c}.300`)(props),\n        borderColor: \"inherit\",\n        borderBottomColor: mode(`white`, `gray.800`)(props),\n      },\n    },\n    tablist: {\n      mb: \"-1px\",\n      borderBottom: \"1px solid\",\n      borderColor: \"inherit\",\n    },\n  }\n}\n\nfunction variantEnclosedColored(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    tab: {\n      border: \"1px solid\",\n      borderColor: \"inherit\",\n      bg: mode(`gray.50`, `whiteAlpha.50`)(props),\n      mb: \"-1px\",\n      _notLast: {\n        marginEnd: \"-1px\",\n      },\n      _selected: {\n        bg: mode(`#fff`, \"gray.800\")(props),\n        color: mode(`${c}.600`, `${c}.300`)(props),\n        borderColor: \"inherit\",\n        borderTopColor: \"currentColor\",\n        borderBottomColor: \"transparent\",\n      },\n    },\n    tablist: {\n      mb: \"-1px\",\n      borderBottom: \"1px solid\",\n      borderColor: \"inherit\",\n    },\n  }\n}\n\nfunction variantSoftRounded(props: Dict) {\n  const { colorScheme: c, theme } = props\n  return {\n    tab: {\n      borderRadius: \"full\",\n      fontWeight: \"semibold\",\n      color: \"gray.600\",\n      _selected: {\n        color: getColor(theme, `${c}.700`),\n        bg: getColor(theme, `${c}.100`),\n      },\n    },\n  }\n}\n\nfunction variantSolidRounded(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    tab: {\n      borderRadius: \"full\",\n      fontWeight: \"semibold\",\n      color: mode(\"gray.600\", \"inherit\")(props),\n      _selected: {\n        color: mode(`#fff`, \"gray.800\")(props),\n        bg: mode(`${c}.600`, `${c}.300`)(props),\n      },\n    },\n  }\n}\n\nconst variantUnstyled = {}\n\nconst variants = {\n  line: variantLine,\n  enclosed: variantEnclosed,\n  \"enclosed-colored\": variantEnclosedColored,\n  \"soft-rounded\": variantSoftRounded,\n  \"solid-rounded\": variantSolidRounded,\n  unstyled: variantUnstyled,\n}\n\nconst defaultProps = {\n  size: \"md\",\n  variant: \"line\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  variants,\n  defaultProps,\n}\n"],"file":"tabs.js"}